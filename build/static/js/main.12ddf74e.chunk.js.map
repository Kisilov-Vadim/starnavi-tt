{"version":3,"sources":["Utilits/Utilits.js","store/actions.ts","components/Square/Square.tsx","components/Game/Game.tsx","components/Message/Message.tsx","components/GameField/GameField.tsx","components/GameLeaderBoard/GameLeaderBoard.tsx","App.tsx","store/store.ts","index.js"],"names":["getData","url","a","fetch","res","json","postData","data","method","cache","headers","body","JSON","stringify","createDate","date","year","getFullYear","month","getMonth","toString","day","getDate","hours","getHours","minutes","getMinutes","length","ACTIONS","setWinners","value","type","setGameActiveArea","setGameStart","setPlayer","setMessage","setScore","Square","active","id","player","useSelector","state","gameStart","gameActiveArea","score","dispatch","useDispatch","useState","height","setHeight","specialClass","setSpecialClass","Math","floor","pow","game_settings","field","winnerScore","setWinnerScore","changeSquareHeight","$","width","useEffect","window","addEventListener","removeEventListener","square_in_line","setStoreMessage","text","color","message","setTimeout","className","style","onClick","newGameActiveArea","filter","item","computer","name","Date","then","catch","err","console","error","Game","activeSquare","setActiveSquare","gameArea","timer","useRef","clearInterval","current","setInterval","random","delay","map","index","key","Message","alert_message","GameField","setName","gameSettings","Select","placeholder","options","onChange","_","currentOption","find","setGameArea","area","i","push","createGameArea","disabled","Input","e","target","Button","content","Loader","inline","GameLeaderBoard","winners","App","Container","initialState","store","createStore","action","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.12ddf74e.chunk.js","sourcesContent":["export const getData = async (url) => {\n  let res = await fetch(url); \n\n  return res.json();\n}\n\nexport const postData = async (url, data=[]) => {\n  let res = await fetch(url, {\n    method: 'POST',\n    cache: 'no-cache',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  })\n\n  return res.json()\n}\n\nexport const createGameArea = (area) => {\n  let res = []; \n  area = Math.pow(area, 2);\n  \n  for (let i = 0; i < area; i++) {\n    res.push(i);\n  }\n\n  return res; \n}\n\n\nexport const createDate = (date) => {\n  let year = date.getFullYear(); \n  let month = date.getMonth().toString();\n  let day = date.getDate().toString();\n  let hours = date.getHours().toString();\n  let minutes = date.getMinutes().toString();\n\n  return `\n    ${day.length === 1 ? '0' + day : day}.${month.length === 1 ? '0' + month : month}.${year} \n    ${hours.length === 0 ? '0' + hours : hours}:${minutes.length === 0 ? '0' + minutes : minutes}`\n} ","import { TDefaultSettings, TMessageState, TPlayerState, TStoreState, TWinners } from '../Utilits/Types'; \n\nexport const ACTIONS = {\n  SET_DEFAULT_SETTINGS: 'SET_DEFAULT_SETTINGS', \n  SET_WINNERS: 'SET_WINNERS', \n  SET_GAME_AREA: 'SET_GAME_AREA',\n  SET_GAME_ACTIVE_AREA: 'SET_GAME_ACTIVE_AREA',\n  SET_GAME_START: 'SET_GAME_START',\n  SET_PLAYER: 'SET_PLAYER',\n  SET_MESSAGE: 'SET_MESSAGE',\n  SET_SCORE: 'SET_SCORE',\n}\n\nexport const setDefaultSettings = (value: TDefaultSettings[]) => ({ type: ACTIONS.SET_DEFAULT_SETTINGS, value});\nexport const setWinners = (value: TWinners[]) => ({ type: ACTIONS.SET_WINNERS, value});\nexport const setGameArea = (value: number[]) => ({ type: ACTIONS.SET_GAME_AREA, value});\nexport const setGameActiveArea = (value: number[]) => ({ type: ACTIONS.SET_GAME_ACTIVE_AREA, value});\nexport const setGameStart = (value: boolean) => ({ type: ACTIONS.SET_GAME_START, value});\nexport const setPlayer = (value: TPlayerState) => ({ type: ACTIONS.SET_PLAYER, value});\nexport const setMessage = (value: TMessageState) => ({ type: ACTIONS.SET_MESSAGE, value});\nexport const setScore= (value: TStoreState) => ({ type: ACTIONS.SET_SCORE, value});","import React, { ReactElement, useEffect, useState } from 'react';\nimport './Square.scss';\nimport $ from 'jquery';\n\n//redux\nimport { useDispatch, useSelector } from 'react-redux';\n\n//actions\nimport { setGameActiveArea, setScore, setGameStart, setMessage, setWinners } from '../../store/actions';\nimport { createDate, postData } from '../../Utilits/Utilits';\n\n\ninterface Props {\n  active: boolean\n  id: number\n}\n\nexport default function Square({ active, id }: Props): ReactElement {\n  const player = useSelector((state: any) => state.player);\n  const gameStart = useSelector((state: any) => state.gameStart);\n  const gameActiveArea = useSelector((state: any) => state.gameActiveArea);\n  const score = useSelector((state: any) => state.score);\n  const dispatch = useDispatch();\n\n  const [height, setHeight] = useState<any>(`0px`);\n  const [specialClass, setSpecialClass] = useState<string>('');\n  const [winnerScore, setWinnerScore] = useState(Math.floor(Math.pow(player.game_settings.field, 2) / 2));\n\n  const changeSquareHeight = () => {\n    setHeight(`${$($('.game-field_square')[0]).width()}px`);\n  }\n\n  useEffect(() => {\n    changeSquareHeight();\n    setWinnerScore(Math.floor(Math.pow(player.game_settings.field, 2) / 2))\n  }, [player])\n\n  useEffect(() => {\n    setSpecialClass('');\n  }, [gameStart])\n\n  useEffect(() => {\n    window.addEventListener('resize', changeSquareHeight); \n\n    return () => {\n      window.removeEventListener('resize', changeSquareHeight); \n    }\n  }, [])\n\n  let square_in_line = player.game_settings.field;\n\n  const setStoreMessage = (text:string, color:string):void => {\n    dispatch(setMessage({\n      message: text,\n      color: color\n    }))\n    setTimeout(() => {\n      dispatch(setMessage({\n        message: '',\n        color: ''\n      }))\n    }, 3000)\n  }\n\n  const handleClick = () => {\n    if (!gameStart) return;\n\n    let newGameActiveArea = [...gameActiveArea].filter(item => item !== id);\n    dispatch(setGameActiveArea(newGameActiveArea))\n\n    if (active) {\n      score.player += 1; \n      setSpecialClass('player');\n    } else {\n      score.computer += 1; \n      setSpecialClass('computer');\n    }\n\n    dispatch(setScore(score));\n    \n    if (score.player === winnerScore) {\n      dispatch(setGameStart(false));\n      dispatch(setScore({ player: 0, computer: 0 }))\n      setStoreMessage(`Congratulation! ${player.name} win this game!`, 'green');\n      let data = {\n        name: player.name,\n        date: createDate(new Date())\n      }\n      postData('/api/winners', [data])\n        .then(res => dispatch(setWinners(res)))\n        .catch(err => console.error(err))\n    } else if (score.computer === winnerScore) {\n      dispatch(setGameStart(false));\n      dispatch(setScore({ player: 0, computer: 0 }))\n      setStoreMessage(`Sorry, but ${player.name} lose`, 'red');\n    }\n  }\n\n  return (\n    <div \n      className={\n        `game-field_square \n         ${gameStart ? specialClass ? 'game-field_square-' + specialClass : '' : null}\n         ${active ? 'game-field_square-active' : ''}\n         `\n      }\n      style={{ height, width: `calc(100% / ${square_in_line} - 10px)` }}\n      onClick={handleClick}\n    >\n      \n    </div>\n  )\n}\n","import React, { ReactElement, useEffect, useRef, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setGameActiveArea } from '../../store/actions';\n\n//components\nimport Square from '../Square/Square';\n\nexport default function Game(): ReactElement {\n  const [activeSquare, setActiveSquare] = useState<null | number>(null);\n  const player = useSelector((state:any) => state.player);\n  const gameArea = useSelector((state:any) => state.gameArea);\n  const gameActiveArea = useSelector((state: any) => state.gameActiveArea);\n  const gameStart = useSelector((state:any) => state.gameStart);\n  const dispatch = useDispatch();\n\n  let timer:any = useRef(); \n\n  useEffect(() => {\n    if (!player.game_settings) return;\n    clearInterval(timer.current);\n    if (gameStart) {\n      timer.current = setInterval(() => {\n        let active = Math.floor(Math.random() * gameActiveArea.length);\n        while(activeSquare === gameActiveArea[active]) {\n          setActiveSquare(null);\n          active = Math.floor(Math.random() * gameActiveArea.length);\n        }\n        setActiveSquare(gameActiveArea[active]);\n      }, player.game_settings.delay)\n    } else {\n      clearInterval(timer.current);\n      dispatch(setGameActiveArea(gameArea));\n      setActiveSquare(null);\n    }\n  }, [gameStart, gameActiveArea])\n\n  return (\n    <div className=\"game-field_game\">\n      {\n        gameArea && gameArea.map((id:number, index:number) => (\n          <Square \n            active={index === activeSquare ? true : false} \n            id={id}\n            key={id}\n          />\n        ))\n      }\n    </div>\n  )\n}\n","import React, { ReactElement } from 'react'\nimport { useSelector } from 'react-redux';\n\n\nexport default function Message(): ReactElement {\n  const {message, color} = useSelector((state:any) => state.alert_message);\n  \n  return (\n    <div className=\"game-field_congrats\">\n      <span style={{ color }}>{message}</span>\n    </div>\n  )\n}\n","import React, { ReactElement, useState } from 'react'\nimport './GameField.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, DropdownProps, Input, Loader, Select } from 'semantic-ui-react'\nimport { createGameArea } from '../../Utilits/Utilits';\n\n//components\nimport Game from '../Game/Game';\n\n//actions\nimport { setGameArea, setGameStart, setMessage, setPlayer, setScore } from '../../store/actions';\nimport Message from '../Message/Message';\n\n\nexport default function GameField(): ReactElement {\n  const [name, setName] = useState<string>('');\n\n  const gameSettings = useSelector((state: any) => state.gameSettings);\n  const gameStart = useSelector((state: any) => state.gameStart);\n  const player = useSelector((state:any) => state.player)\n  const dispatch = useDispatch();\n\n  const handleChange = (_:any, { value, options }:DropdownProps) => {\n    let currentOption:any = options ? options.find((item: any ) => item.value === value) : 5;\n\n    player.game_settings = currentOption; \n\n    dispatch(setPlayer(player));\n    dispatch(setGameArea(createGameArea(currentOption.field)))\n  }\n\n  const handleStartGame = () => {\n    if (name === '' || !player.game_settings) {\n      dispatch(setMessage({\n        message: 'Fill in all the details above',\n        color: 'red'\n      }))\n      setTimeout(() => {\n        dispatch(setMessage({\n          message: '',\n          color: ''\n        }))\n      }, 3000)\n      return;\n    }\n    player.name = name;\n    dispatch(setPlayer(player));\n    dispatch(setGameStart(!gameStart));\n    dispatch(setScore({ player: 0, computer: 0 }))\n  }\n\n  const handleNameChange = (e:any) => {\n    setName(e.target.value)\n  }\n\n  if (!gameSettings) {\n    return (\n      <div className=\"game-field\">\n        <Loader active inline='centered' />\n      </div>\n    )\n  } else {\n\n    return (\n      <div className=\"game-field\">\n        <div className=\"game-field_controls\">\n          <Select placeholder='Pick game mode' options={gameSettings} onChange={handleChange} disabled={gameStart} />\n          <Input \n            placeholder='Enter your name' \n            className=\"game-field_input\" \n            disabled={gameStart} \n            value={name}\n            onChange={handleNameChange}\n          />\n          <Button content={`${gameStart ? 'Stop' : 'Play'}`} onClick={handleStartGame} />\n        </div>\n        <Message />\n        <Game />\n      </div>\n    )\n  }\n}\n","import React, { ReactElement } from 'react'\nimport './GameLeaderBoard.scss';\nimport { useSelector } from 'react-redux';\nimport { TWinners } from '../../Utilits/Types';\nimport { Loader } from 'semantic-ui-react';\n\n\nexport default function GameLeaderBoard(): ReactElement {\n  const winners = useSelector((state:any) => state.winners);\n\n  if (!winners) {\n    return (\n      <div className='game-board'>\n        <Loader active inline='centered' />\n      </div>\n    )\n  } else {\n    return (\n      <div className='game-board'>\n        {\n          winners.length !== 0 && <span className=\"game-board_title\">Leader Board</span>\n        }\n        <div className=\"game-board_playersGroup\">\n          {\n            winners.map(({name, date}:TWinners) => {\n              return (\n                <div className=\"game-board_player\" key={date}>\n                  <span className=\"name\">{name}</span>\n                  <span className=\"date\">{date}</span>\n                </div>\n              )\n            })\n          }\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { useEffect } from 'react';\nimport './App.scss';\nimport 'semantic-ui-css/semantic.min.css';\nimport { useDispatch } from 'react-redux'\n\nimport { Container } from 'semantic-ui-react'\n\n//components\nimport GameField from './components/GameField/GameField';\nimport GameLeaderBoard from './components/GameLeaderBoard/GameLeaderBoard';\nimport { setDefaultSettings, setWinners } from './store/actions';\nimport { getData, postData } from './Utilits/Utilits';\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n\n    getData('/api/game-settings')\n      .then(res => {\n        dispatch(setDefaultSettings(res.map((item:any, index:number) => {\n          item.key = index;\n          return item\n        })))\n      })\n      .catch(err => console.error(err))\n\n    postData('/api/winners')\n      .then(res => {\n        dispatch(setWinners(res));\n      })\n      .catch(err => console.error(err))\n      \n  }, [])\n\n  return (\n   <Container>\n    <div className=\"main\">\n      <GameField />\n      <GameLeaderBoard />\n    </div>\n   </Container>\n  )\n}\n\nexport default App;\n","import { ACTIONS } from './actions';\nimport { createStore } from 'redux';\n\ntype TAction = {\n  type: string\n  value?: any\n}\n\nconst initialState = {\n  gameSettings: null,\n  gameArea: null, \n  gameActiveArea: null,\n  gameStart: false,\n  player: {\n    name: '', \n    game_settings: null\n  },\n  alert_message: {\n    message: '',\n    color: ''\n  },\n  score: {\n    computer: 0, \n    player: 0\n  },\n  winners: null\n};\n\nexport const reducer = (state=initialState, action:TAction) => {\n  switch(action.type) {\n    case ACTIONS.SET_DEFAULT_SETTINGS: \n      return {\n        ...state,\n        gameSettings: action.value\n      }\n    case ACTIONS.SET_GAME_AREA:\n      return {\n        ...state,\n        gameArea: action.value,\n        gameActiveArea: action.value\n      }\n    case ACTIONS.SET_GAME_ACTIVE_AREA: \n      return {\n        ...state,\n        gameActiveArea: action.value\n      }\n    case ACTIONS.SET_GAME_START: \n      return {\n        ...state,\n        gameStart: action.value\n      }\n    case ACTIONS.SET_PLAYER: \n      return {\n        ...state, \n        player: { ...action.value }\n      }\n    case ACTIONS.SET_MESSAGE: \n      return {\n        ...state, \n        alert_message: { ...action.value }\n      }\n    case ACTIONS.SET_SCORE: \n      return {\n        ...state, \n        score: { ...action.value }\n      }\n    case ACTIONS.SET_WINNERS: \n      return {\n        ...state, \n        winners: action.value\n      }\n    default:\n      return state;\n  }\n}\n\nconst store = createStore(reducer)\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from '../src/store/store'; \n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}